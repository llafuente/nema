// DO NOT EDIT THIS FILE

import { Cast } from "../Cast";
import { Random } from "../Random";
import { StringStringMap } from "./StringStringMap";
export interface IInitiParametersDto {
  template: string;
  strategyId: string;
  parameters: StringStringMap[];
}
export class InitiParametersDto implements IInitiParametersDto {
  template: string;
  strategyId: string;
  parameters: StringStringMap[];
  constructor(
    template: string,
    strategyId: string,
    parameters: StringStringMap[]
  ) {
    this.template = template;
    this.strategyId = strategyId;
    this.parameters = parameters;
  }

  static parse(json: any): InitiParametersDto {
    if (json == null) {
      return InitiParametersDto.emptyInstance();
    }

    return new InitiParametersDto(
      Cast.string(json.template),
      Cast.string(json.strategyId),
      (json.parameters || []).map(x => StringStringMap.parse(x))
    );
  }

  static randomInstance(): InitiParametersDto {
    return new InitiParametersDto(Random.string(), Random.string(), [
      StringStringMap.randomInstance(),
      StringStringMap.randomInstance()
    ]);
  }

  static emptyInstance(): InitiParametersDto {
    return new InitiParametersDto(null, null, []);
  }

  getTemplate(): string {
    return this.template;
  }
  setTemplate($value: string) {
    this.template = $value;
  }

  getStrategyId(): string {
    return this.strategyId;
  }
  setStrategyId($value: string) {
    this.strategyId = $value;
  }

  getParameters(): StringStringMap[] {
    return this.parameters;
  }
  setParameters($value: StringStringMap[]) {
    this.parameters = $value;
  }
}
