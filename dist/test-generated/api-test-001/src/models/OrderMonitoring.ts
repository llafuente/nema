// DO NOT EDIT THIS FILE

import { MonitoringDto } from "./MonitoringDto";
import { Cast } from "../Cast";
import { Random } from "../Random";
export interface IOrderMonitoring {
  type: string;
  quantity: number;
  monitoringType: string;
}
export class OrderMonitoring extends MonitoringDto implements IOrderMonitoring {
  type: string;
  quantity: number;
  monitoringType: string;
  constructor(
    strategyId: string,
    clOrderId: string,
    origClOrderId: string,
    orderId: string,
    side: string,
    instrument: string,
    price: number,
    startAt: number,
    endAt: number,
    type: string,
    quantity: number,
    monitoringType: string
  ) {
    super(
      strategyId,
      clOrderId,
      origClOrderId,
      orderId,
      side,
      instrument,
      price,
      startAt,
      endAt
    );
    this.type = type;
    this.quantity = quantity;
    this.monitoringType = monitoringType;
  }

  static parse(json: any): OrderMonitoring {
    if (json == null) {
      return OrderMonitoring.emptyInstance();
    }

    return new OrderMonitoring(
      Cast.string(json.strategyId),
      Cast.string(json.clOrderId),
      Cast.string(json.origClOrderId),
      Cast.string(json.orderId),
      Cast.string(json.side),
      Cast.string(json.instrument),
      Cast.number(json.price),
      Cast.number(json.startAt),
      Cast.number(json.endAt),
      Cast.string(json.type),
      Cast.number(json.quantity),
      Cast.string(json.monitoringType)
    );
  }

  static randomInstance(): OrderMonitoring {
    return new OrderMonitoring(
      Random.string(),
      Random.string(),
      Random.string(),
      Random.string(),
      Random.string(),
      Random.string(),
      Random.number(),
      Random.number(),
      Random.number(),
      Random.string(),
      Random.number(),
      Random.string()
    );
  }

  static emptyInstance(): OrderMonitoring {
    return new OrderMonitoring(
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    );
  }

  getType(): string {
    return this.type;
  }
  setType($value: string) {
    this.type = $value;
  }

  getQuantity(): number {
    return this.quantity;
  }
  setQuantity($value: number) {
    this.quantity = $value;
  }

  getMonitoringType(): string {
    return this.monitoringType;
  }
  setMonitoringType($value: string) {
    this.monitoringType = $value;
  }
}
