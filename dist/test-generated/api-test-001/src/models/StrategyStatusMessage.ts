// DO NOT EDIT THIS FILE

import { Cast } from "../Cast";
import { Random } from "../Random";
export interface IStrategyStatusMessage {
  strategyId: string;
  strategyState: string;
  dateTime: number;
  message: string;
}
export class StrategyStatusMessage implements IStrategyStatusMessage {
  strategyId: string;
  strategyState: string;
  dateTime: number;
  message: string;
  constructor(
    strategyId: string,
    strategyState: string,
    dateTime: number,
    message: string
  ) {
    this.strategyId = strategyId;
    this.strategyState = strategyState;
    this.dateTime = dateTime;
    this.message = message;
  }

  static parse(json: any): StrategyStatusMessage {
    if (json == null) {
      return StrategyStatusMessage.emptyInstance();
    }

    return new StrategyStatusMessage(
      Cast.string(json.strategyId),
      Cast.string(json.strategyState),
      Cast.number(json.dateTime),
      Cast.string(json.message)
    );
  }

  static randomInstance(): StrategyStatusMessage {
    return new StrategyStatusMessage(
      Random.string(),
      Random.string(),
      Random.number(),
      Random.string()
    );
  }

  static emptyInstance(): StrategyStatusMessage {
    return new StrategyStatusMessage(null, null, null, null);
  }

  getStrategyId(): string {
    return this.strategyId;
  }
  setStrategyId($value: string) {
    this.strategyId = $value;
  }

  getStrategyState(): string {
    return this.strategyState;
  }
  setStrategyState($value: string) {
    this.strategyState = $value;
  }

  getDateTime(): number {
    return this.dateTime;
  }
  setDateTime($value: number) {
    this.dateTime = $value;
  }

  getMessage(): string {
    return this.message;
  }
  setMessage($value: string) {
    this.message = $value;
  }
}
