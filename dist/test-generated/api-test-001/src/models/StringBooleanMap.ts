// DO NOT EDIT THIS FILE

import { Cast } from "../Cast";
import { Random } from "../Random";
export interface IStringBooleanMap {
  key: string;
  value: boolean;
}
export class StringBooleanMap implements IStringBooleanMap {
  key: string;
  value: boolean;
  constructor(key: string, value: boolean) {
    this.key = key;
    this.value = value;
  }

  static parse(json: any): StringBooleanMap {
    if (json == null) {
      return StringBooleanMap.emptyInstance();
    }

    return new StringBooleanMap(
      Cast.string(json.key),
      Cast.boolean(json.value)
    );
  }

  static randomInstance(): StringBooleanMap {
    return new StringBooleanMap(Random.string(), Random.boolean());
  }

  static emptyInstance(): StringBooleanMap {
    return new StringBooleanMap(null, null);
  }

  getKey(): string {
    return this.key;
  }
  setKey($value: string) {
    this.key = $value;
  }

  getValue(): boolean {
    return this.value;
  }
  setValue($value: boolean) {
    this.value = $value;
  }
}
