// DO NOT EDIT THIS FILE

import { Injectable } from "@angular/core";
import { Router } from "@angular/router";
import { ActivatedRouteSnapshot, Resolve } from "@angular/router";
import { Observable, Subject } from "rxjs/Rx";
import { RestApi } from "../RestApi";
import { StrategyDto } from "../models/StrategyDto";

@Injectable()
export class StrategiesResolve implements Resolve<StrategyDto> {
  constructor(private api: RestApi, private router: Router) {}

  resolve(route: ActivatedRouteSnapshot) {
    console.info("resolve: getStrategyRest");

    const x = this.api.getStrategyRest(
      this.getParameterOrData(route, "strategyId")
    );

    x.subscribe(
      response => {
        return response;
      },
      err => {
        this.router.navigate(["/error"]);
      }
    );

    return x;
  }

  /**
   * get parameter from param first until root, then try on data
   */
  getParameterOrData(snapshot: ActivatedRouteSnapshot, key: string): any {
    let s = snapshot;
    do {
      const d = s.params as any;
      if (d && d[key] !== undefined) {
        return d[key];
      }

      s = s.parent;
    } while (s);

    s = snapshot;
    do {
      const d = s.data as any;
      if (d && d[key] !== undefined) {
        return d[key];
      }

      s = s.parent;
    } while (s);

    return null;
  }
}
