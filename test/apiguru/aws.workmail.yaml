swagger: '2.0'
schemes:
  - https
  - http
host: workmail.amazonaws.com
basePath: /
x-hasEquivalentPaths: true
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: 'https://github.com/mermade/aws2openapi'
    x-twitter: PermittedSoc
  description: '<p>Amazon WorkMail is a secure, managed business email and calendaring service with support for existing desktop and mobile email clients. You can access your email, contacts, and calendars using Microsoft Outlook, your browser, or their native iOS and Android email applications. You can integrate Amazon WorkMail with your existing corporate directory and control both the keys that encrypt your data and the location in which your data is stored.</p> <p>The Amazon WorkMail API is designed for the following scenarios:</p> <ul> <li> <p>Listing and describing organizations</p> </li> </ul> <ul> <li> <p>Managing users</p> </li> </ul> <ul> <li> <p>Managing groups</p> </li> </ul> <ul> <li> <p>Managing resources</p> </li> </ul> <p>All Amazon WorkMail API actions are Amazon-authenticated and certificate-signed. They not only require the use of the AWS SDK, but also allow for the exclusive use of IAM users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the Amazon WorkMail site, the IAM user gains full administrative visibility into the entire Amazon WorkMail organization (or as set in the IAM policy). This includes, but is not limited to, the ability to create, update, and delete users, groups, and resources. This allows developers to perform the scenarios listed above, as well as give users the ability to grant access on a selective basis using the IAM model.</p>'
  license:
    name: Apache 2.0 License
    url: 'http://www.apache.org/licenses/'
  termsOfService: 'https://aws.amazon.com/service-terms/'
  title: Amazon WorkMail
  version: '2017-10-01'
  x-apiClientRegistration:
    url: 'https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct'
  x-apisguru-categories:
    - cloud
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.jpeg'
  x-origin:
    - contentType: application/json
      converter:
        url: 'https://github.com/mermade/aws2openapi'
        version: 1.0.0
      url: 'https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/workmail-2017-10-01.normal.json'
      x-apisguru-direct: true
  x-preferred: true
  x-providerName: amazonaws.com
  x-release: v4
  x-serviceName: workmail
externalDocs:
  description: Amazon Web Services documentation
  url: 'https://aws.amazon.com/workmail/'
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  hmac:
    description: Amazon Signature authorization v4
    in: header
    name: Authorization
    type: apiKey
    x-amazon-apigateway-authtype: awsSigv4
security:
  - hmac: []
parameters:
  Action:
    in: header
    name: Action
    required: true
    type: string
  Version:
    in: header
    name: Version
    required: true
    type: string
  X-Amz-Algorithm:
    in: header
    name: X-Amz-Algorithm
    required: false
    type: string
  X-Amz-Content-Sha256:
    in: header
    name: X-Amz-Content-Sha256
    required: false
    type: string
  X-Amz-Credential:
    in: header
    name: X-Amz-Credential
    required: false
    type: string
  X-Amz-Date:
    in: header
    name: X-Amz-Date
    required: false
    type: string
  X-Amz-Security-Token:
    in: header
    name: X-Amz-Security-Token
    required: false
    type: string
  X-Amz-Signature:
    in: header
    name: X-Amz-Signature
    required: false
    type: string
  X-Amz-SignedHeaders:
    in: header
    name: X-Amz-SignedHeaders
    required: false
    type: string
paths:
  /:
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds a member to the resource's set of delegates.
      operationId: AssociateDelegateToResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateDelegateToResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateDelegateToResourceResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#AssociateMemberToGroup':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds a member to the group's set.
      operationId: AssociateMemberToGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AssociateMemberToGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AssociateMemberToGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '487':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#CreateAlias':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Adds an alias to the set of a given member of Amazon WorkMail.
      operationId: CreateAlias
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateAliasRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateAliasResponse'
        '480':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '485':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '486':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '487':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#CreateGroup':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a group that can be used in Amazon WorkMail by calling the RegisterToWorkMail operation.
      operationId: CreateGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: ReservedNameException
          schema:
            $ref: '#/definitions/ReservedNameException'
        '487':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#CreateResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a new Amazon WorkMail resource. The available types are equipment and room.
      operationId: CreateResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateResourceResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: ReservedNameException
          schema:
            $ref: '#/definitions/ReservedNameException'
  '/#CreateUser':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a user who can be used in Amazon WorkMail by calling the RegisterToWorkMail operation.
      operationId: CreateUser
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateUserResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: InvalidPasswordException
          schema:
            $ref: '#/definitions/InvalidPasswordException'
        '484':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '485':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '487':
          description: ReservedNameException
          schema:
            $ref: '#/definitions/ReservedNameException'
        '488':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DeleteAlias':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Remove the alias from a set of aliases for a given user.
      operationId: DeleteAlias
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteAliasRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteAliasResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DeleteGroup':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Deletes a group from Amazon WorkMail.
      operationId: DeleteGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DeleteResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes the specified resource. '
      operationId: DeleteResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteResourceResponse'
        '480':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DeleteUser':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Deletes a user from Amazon WorkMail and all subsequent systems. The action can''t be undone. The mailbox is kept as-is for a minimum of 30 days, without any means to restore it. '
      operationId: DeleteUser
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeleteUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeleteUserResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '484':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '485':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '486':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#DeregisterFromWorkMail':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Mark a user, group, or resource as no longer used in Amazon WorkMail. This action disassociates the mailbox and schedules it for clean-up. Amazon WorkMail keeps mailboxes for 30 days before they are permanently removed. The functionality in the console is <i>Disable</i>.'
      operationId: DeregisterFromWorkMail
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DeregisterFromWorkMailRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DeregisterFromWorkMailResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DescribeGroup':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the data available for the group.
      operationId: DescribeGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeGroupResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DescribeOrganization':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Provides more information regarding a given organization based on its identifier.
      operationId: DescribeOrganization
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeOrganizationRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeOrganizationResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
  '/#DescribeResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns the data available for the resource.
      operationId: DescribeResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeResourceResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DescribeUser':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Provides information regarding the user.
      operationId: DescribeUser
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DescribeUserRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DescribeUserResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DisassociateDelegateFromResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes a member from the resource's set of delegates.
      operationId: DisassociateDelegateFromResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateDelegateFromResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateDelegateFromResourceResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#DisassociateMemberFromGroup':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Removes a member from a group.
      operationId: DisassociateMemberFromGroup
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DisassociateMemberFromGroupRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/DisassociateMemberFromGroupResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '486':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '487':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#ListAliases':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Creates a paginated call to list the aliases associated with a given entity.
      operationId: ListAliases
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListAliasesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListAliasesResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#ListGroupMembers':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns an overview of the members of a group.
      operationId: ListGroupMembers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupMembersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupMembersResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#ListGroups':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns summaries of the organization's groups.
      operationId: ListGroups
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListGroupsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListGroupsResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '482':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '483':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#ListOrganizations':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns summaries of the customer's non-deleted organizations.
      operationId: ListOrganizations
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListOrganizationsRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListOrganizationsResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
  '/#ListResourceDelegates':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Lists the delegates associated with a resource. Users and groups can be resource delegates and answer requests on behalf of the resource.
      operationId: ListResourceDelegates
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResourceDelegatesRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourceDelegatesResponse'
        '480':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '481':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '482':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '483':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '484':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#ListResources':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns summaries of the organization's resources.
      operationId: ListResources
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListResourcesRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListResourcesResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#ListUsers':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Returns summaries of the organization's users.
      operationId: ListUsers
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ListUsersRequest'
        - description: Pagination limit
          in: query
          name: MaxResults
          required: false
          type: string
        - description: Pagination token
          in: query
          name: NextToken
          required: false
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ListUsersResponse'
        '480':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '481':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '482':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#RegisterToWorkMail':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: 'Registers an existing and disabled user, group, or resource/entity for Amazon WorkMail use by associating a mailbox and calendaring capabilities. It performs no change if the entity is enabled and fails if the entity is deleted. This operation results in the accumulation of costs. For more information, see <a href="http://aws.amazon.com/workmail/pricing">Pricing</a>. The equivalent console functionality for this operation is <i>Enable</i>. Users can either be created by calling the CreateUser API or they can be synchronized from your directory. For more information, see DeregisterFromWorkMail.'
      operationId: RegisterToWorkMail
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/RegisterToWorkMailRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RegisterToWorkMailResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '484':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '485':
          description: EntityAlreadyRegisteredException
          schema:
            $ref: '#/definitions/EntityAlreadyRegisteredException'
        '486':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '487':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '488':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '489':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '490':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
  '/#ResetPassword':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Allows the administrator to reset the password for a user.
      operationId: ResetPassword
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResetPasswordRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetPasswordResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '483':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '484':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '485':
          description: InvalidPasswordException
          schema:
            $ref: '#/definitions/InvalidPasswordException'
        '486':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '487':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '488':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#UpdatePrimaryEmailAddress':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates the primary email for an entity. The current email is moved into the list of aliases (or swapped between an existing alias and the current primary email) and the email provided in the input is promoted as the primary.
      operationId: UpdatePrimaryEmailAddress
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdatePrimaryEmailAddressRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdatePrimaryEmailAddressResponse'
        '480':
          description: DirectoryServiceAuthenticationFailedException
          schema:
            $ref: '#/definitions/DirectoryServiceAuthenticationFailedException'
        '481':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '482':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '483':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '484':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '485':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '486':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '487':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '488':
          description: InvalidParameterException
          schema:
            $ref: '#/definitions/InvalidParameterException'
        '489':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '490':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
        '491':
          description: UnsupportedOperationException
          schema:
            $ref: '#/definitions/UnsupportedOperationException'
  '/#UpdateResource':
    parameters:
      - $ref: '#/parameters/Action'
      - $ref: '#/parameters/Version'
      - $ref: '#/parameters/X-Amz-Content-Sha256'
      - $ref: '#/parameters/X-Amz-Date'
      - $ref: '#/parameters/X-Amz-Algorithm'
      - $ref: '#/parameters/X-Amz-Credential'
      - $ref: '#/parameters/X-Amz-Security-Token'
      - $ref: '#/parameters/X-Amz-Signature'
      - $ref: '#/parameters/X-Amz-SignedHeaders'
    post:
      description: Updates data for the resource. It must be preceded by a describe call in order to have the latest information. The dataset in the request should be the one expected when performing another describe call.
      operationId: UpdateResource
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateResourceRequest'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UpdateResourceResponse'
        '480':
          description: DirectoryUnavailableException
          schema:
            $ref: '#/definitions/DirectoryUnavailableException'
        '481':
          description: EntityNotFoundException
          schema:
            $ref: '#/definitions/EntityNotFoundException'
        '482':
          description: EntityStateException
          schema:
            $ref: '#/definitions/EntityStateException'
        '483':
          description: InvalidConfigurationException
          schema:
            $ref: '#/definitions/InvalidConfigurationException'
        '484':
          description: EmailAddressInUseException
          schema:
            $ref: '#/definitions/EmailAddressInUseException'
        '485':
          description: MailDomainNotFoundException
          schema:
            $ref: '#/definitions/MailDomainNotFoundException'
        '486':
          description: MailDomainStateException
          schema:
            $ref: '#/definitions/MailDomainStateException'
        '487':
          description: NameAvailabilityException
          schema:
            $ref: '#/definitions/NameAvailabilityException'
        '488':
          description: OrganizationNotFoundException
          schema:
            $ref: '#/definitions/OrganizationNotFoundException'
        '489':
          description: OrganizationStateException
          schema:
            $ref: '#/definitions/OrganizationStateException'
definitions:
  Aliases:
    items:
      $ref: '#/definitions/EmailAddress'
    type: array
  AssociateDelegateToResourceRequest:
    properties:
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The member (user or group) to associate to the resource.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the resource exists.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The resource for which members are associated.
    required:
      - OrganizationId
      - ResourceId
      - EntityId
    type: object
  AssociateDelegateToResourceResponse:
    properties: {}
    type: object
  AssociateMemberToGroupRequest:
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The group for which the member is associated.
      MemberId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The member to associate to the group.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the group exists.
    required:
      - OrganizationId
      - GroupId
      - MemberId
    type: object
  AssociateMemberToGroupResponse:
    properties: {}
    type: object
  BookingOptions:
    description: At least one delegate must be associated to the resource to disable automatic replies from the resource.
    properties:
      AutoAcceptRequests:
        $ref: '#/definitions/Boolean'
        description: 'The resource''s ability to automatically reply to requests. If disabled, delegates must be associated to the resource.'
      AutoDeclineConflictingRequests:
        $ref: '#/definitions/Boolean'
        description: The resource's ability to automatically decline any conflicting requests.
      AutoDeclineRecurringRequests:
        $ref: '#/definitions/Boolean'
        description: The resource's ability to automatically decline any recurring requests.
    type: object
  Boolean:
    type: boolean
  CreateAliasRequest:
    properties:
      Alias:
        $ref: '#/definitions/EmailAddress'
        description: The alias to add to the user.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The alias is added to this Amazon WorkMail entity.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the member exists.
    required:
      - OrganizationId
      - EntityId
      - Alias
    type: object
  CreateAliasResponse:
    properties: {}
    type: object
  CreateGroupRequest:
    properties:
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of the group.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization under which the group is to be created.
    required:
      - OrganizationId
      - Name
    type: object
  CreateGroupResponse:
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The ID of the group.
    type: object
  CreateResourceRequest:
    properties:
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the created resource.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is created.
      Type:
        $ref: '#/definitions/ResourceType'
        description: The type of the created resource.
    required:
      - OrganizationId
      - Name
      - Type
    type: object
  CreateResourceResponse:
    properties:
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the created resource.
    type: object
  CreateUserRequest:
    properties:
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name for the user to be created.
      Name:
        $ref: '#/definitions/UserName'
        description: The name for the user to be created.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of the organization for which the user is created.
      Password:
        $ref: '#/definitions/Password'
        description: The password for the user to be created.
    required:
      - OrganizationId
      - Name
      - DisplayName
      - Password
    type: object
  CreateUserResponse:
    properties:
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The information regarding the newly created user.
    type: object
  Delegate:
    description: 'The name of the attribute, which is one of the values defined in the UserAttribute enumeration.'
    properties:
      Id:
        $ref: '#/definitions/String'
        description: The identifier for the user or group is associated as the resource's delegate.
      Type:
        $ref: '#/definitions/MemberType'
        description: 'The type of the delegate: user or group.'
    required:
      - Id
      - Type
    type: object
  DeleteAliasRequest:
    properties:
      Alias:
        $ref: '#/definitions/EmailAddress'
        description: The aliases to be removed from the user's set of aliases. Duplicate entries in the list are collapsed into single entries (the list is transformed into a set).
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the Amazon WorkMail entity to have the aliases removed.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the user exists.
    required:
      - OrganizationId
      - EntityId
      - Alias
    type: object
  DeleteAliasResponse:
    properties: {}
    type: object
  DeleteGroupRequest:
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the group to be deleted.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization that contains the group.
    required:
      - OrganizationId
      - GroupId
    type: object
  DeleteGroupResponse:
    properties: {}
    type: object
  DeleteResourceRequest:
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is deleted.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the resource to be deleted.
    required:
      - OrganizationId
      - ResourceId
    type: object
  DeleteResourceResponse:
    properties: {}
    type: object
  DeleteUserRequest:
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization that contains the user.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the user to be deleted.
    required:
      - OrganizationId
      - UserId
    type: object
  DeleteUserResponse:
    properties: {}
    type: object
  DeregisterFromWorkMailRequest:
    properties:
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the entity to be updated.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the Amazon WorkMail entity exists.
    required:
      - OrganizationId
      - EntityId
    type: object
  DeregisterFromWorkMailResponse:
    properties: {}
    type: object
  DescribeGroupRequest:
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the group to be described.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the group exists.
    required:
      - OrganizationId
      - GroupId
    type: object
  DescribeGroupResponse:
    properties:
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a user was deregistered from Amazon WorkMail, in UNIX epoch time format.'
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the described group.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a user was registered to Amazon WorkMail, in UNIX epoch time format.'
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the described group.
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of the described group.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the user: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to Amazon WorkMail).'
    type: object
  DescribeOrganizationRequest:
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization to be described.
    required:
      - OrganizationId
    type: object
  DescribeOrganizationResponse:
    properties:
      Alias:
        $ref: '#/definitions/OrganizationName'
        description: The alias for an organization.
      CompletedDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date at which the organization became usable in the Amazon WorkMail context, in UNIX epoch time format.'
      DefaultMailDomain:
        $ref: '#/definitions/String'
        description: The default mail domain associated with the organization.
      DirectoryId:
        $ref: '#/definitions/String'
        description: The identifier for the directory associated with an Amazon WorkMail organization.
      DirectoryType:
        $ref: '#/definitions/String'
        description: The type of directory associated with the Amazon WorkMail organization.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The (optional) error message indicating if unexpected behavior was encountered with regards to the organization.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of an organization.
      State:
        $ref: '#/definitions/String'
        description: The state of an organization.
    type: object
  DescribeResourceRequest:
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is described.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the resource to be described.
    required:
      - OrganizationId
      - ResourceId
    type: object
  DescribeResourceResponse:
    properties:
      BookingOptions:
        $ref: '#/definitions/BookingOptions'
        description: The booking options for the described resource.
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a resource was registered from Amazon WorkMail, in UNIX epoch time format.'
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the described resource.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time when a resource was registered to Amazon WorkMail, in UNIX epoch time format.'
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the described resource.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the described resource.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the resource: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to Amazon WorkMail).'
      Type:
        $ref: '#/definitions/ResourceType'
        description: The type of the described resource.
    type: object
  DescribeUserRequest:
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the user exists.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the user to be described.
    required:
      - OrganizationId
      - UserId
    type: object
  DescribeUserResponse:
    properties:
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time at which the user was disabled for Amazon WorkMail usage, in UNIX epoch time format.'
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name of the user.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the user.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: 'The date and time at which the user was enabled for Amazon WorkMail usage, in UNIX epoch time format.'
      Name:
        $ref: '#/definitions/UserName'
        description: The name for the user.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of a user: enabled (registered to Amazon WorkMail) or disabled (deregistered or never registered to Amazon WorkMail).'
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the described user.
      UserRole:
        $ref: '#/definitions/UserRole'
        description: 'In certain cases other entities are modeled as users. If interoperability is enabled, resources are imported into Amazon WorkMail as users. Because different Amazon WorkMail organizations rely on different directory types, administrators can distinguish between a user that is not registered to Amazon WorkMail (is disabled and has a user role) and the administrative users of the directory. The values are USER, RESOURCE, and SYSTEM_USER.'
    type: object
  DirectoryServiceAuthenticationFailedException:
    description: The Directory Service doesn't recognize the credentials supplied by the Amazon WorkMail service.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  DirectoryUnavailableException:
    description: The directory that you are trying to perform operations on isn't available.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  DisassociateDelegateFromResourceRequest:
    properties:
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The identifier for the member (user, group) to be removed from the resource''s delegates.'
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the resource exists.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: 'The identifier of the resource from which delegates'' set members are removed. '
    required:
      - OrganizationId
      - ResourceId
      - EntityId
    type: object
  DisassociateDelegateFromResourceResponse:
    properties: {}
    type: object
  DisassociateMemberFromGroupRequest:
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the group from which members are removed.
      MemberId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the member to be removed to the group.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the group exists.
    required:
      - OrganizationId
      - GroupId
      - MemberId
    type: object
  DisassociateMemberFromGroupResponse:
    properties: {}
    type: object
  EmailAddress:
    maxLength: 254
    minLength: 1
    pattern: '[a-zA-Z0-9._%+-]{1,64}@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}'
    type: string
  EmailAddressInUseException:
    description: 'The email address that you''re trying to assign is already created for a different user, group, or resource.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  EntityAlreadyRegisteredException:
    description: 'The user, group, or resource that you''re trying to register is already registered.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  EntityNotFoundException:
    description: 'The identifier supplied for the entity is valid, but it does not exist in your organization.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  EntityState:
    enum:
      - ENABLED
      - DISABLED
      - DELETED
    type: string
  EntityStateException:
    description: 'You are performing an operation on an entity that isn''t in the expected state, such as trying to update a deleted user.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  Group:
    description: The representation of an Amazon WorkMail group.
    properties:
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the group was disabled from Amazon WorkMail use.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the group.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the group was enabled for Amazon WorkMail use.
      Id:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the group.
      Name:
        $ref: '#/definitions/GroupName'
        description: The name of the group.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the group, which can be ENABLED, DISABLED, or DELETED.'
    type: object
  GroupName:
    maxLength: 256
    minLength: 1
    pattern: '[\u0020-\u00FF]+'
    type: string
  Groups:
    items:
      $ref: '#/definitions/Group'
    type: array
  InvalidConfigurationException:
    description: The configuration for a resource isn't valid. A resource must either be able to auto-respond to requests or have at least one delegate associated that can do it on its behalf.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  InvalidParameterException:
    description: One or more of the input parameters don't match the service's restrictions.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  InvalidPasswordException:
    description: 'The supplied password doesn''t match the minimum security constraints, such as length or use of special characters.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  ListAliasesRequest:
    properties:
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the entity for which to list the aliases.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the entity exists.
    required:
      - OrganizationId
      - EntityId
    type: object
  ListAliasesResponse:
    properties:
      Aliases:
        $ref: '#/definitions/Aliases'
        description: The entity's paginated aliases.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
    type: object
  ListGroupMembersRequest:
    properties:
      GroupId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the group to which the members are associated.
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token to use to retrieve the next page of results. The first call does not contain any tokens.'
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the group exists.
    required:
      - OrganizationId
      - GroupId
    type: object
  ListGroupMembersResponse:
    properties:
      Members:
        $ref: '#/definitions/Members'
        description: The members associated to the group.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
    type: object
  ListGroupsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the groups exist.
    required:
      - OrganizationId
    type: object
  ListGroupsResponse:
    properties:
      Groups:
        $ref: '#/definitions/Groups'
        description: The overview of groups for an organization.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
    type: object
  ListOrganizationsRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
    type: object
  ListOrganizationsResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The value is "null" when there are no more results to return.
      OrganizationSummaries:
        $ref: '#/definitions/OrganizationSummaries'
        description: The overview of owned organizations presented as a list of organization summaries.
    type: object
  ListResourceDelegatesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The number of maximum results in a page.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token used to paginate through the delegates associated with a resource.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization that contains the resource for which delegates are listed.
      ResourceId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the resource whose delegates are listed.
    required:
      - OrganizationId
      - ResourceId
    type: object
  ListResourceDelegatesResponse:
    properties:
      Delegates:
        $ref: '#/definitions/ResourceDelegates'
        description: One page of the resource's delegates.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: 'The token used to paginate through the delegates associated with a resource. While results are still available, it has an associated value. When the last page is reached, the token is empty. '
    type: object
  ListResourcesRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: The token to use to retrieve the next page of results. The first call does not contain any tokens.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the resources exist.
    required:
      - OrganizationId
    type: object
  ListResourcesResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token used to paginate through all the organization''s resources. While results are still available, it has an associated value. When the last page is reached, the token is empty.'
      Resources:
        $ref: '#/definitions/Resources'
        description: One page of the organization's resource representation.
    type: object
  ListUsersRequest:
    properties:
      MaxResults:
        $ref: '#/definitions/MaxResults'
        description: The maximum number of results to return in a single call.
      NextToken:
        $ref: '#/definitions/NextToken'
        description: TBD
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the users exist.
    required:
      - OrganizationId
    type: object
  ListUsersResponse:
    properties:
      NextToken:
        $ref: '#/definitions/NextToken'
        description: ' The token to use to retrieve the next page of results. This value is `null` when there are no more results to return.'
      Users:
        $ref: '#/definitions/Users'
        description: The overview of users for an organization.
    type: object
  MailDomainNotFoundException:
    description: 'For an email or alias to be created in Amazon WorkMail, the included domain must be defined in the organization.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  MailDomainStateException:
    description: 'After a domain has been added to the organization, it must be verified. The domain is not yet verified.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  MaxResults:
    maximum: 100
    minimum: 1
    type: integer
  Member:
    description: The representation of a group member (user or group).
    properties:
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the member was disabled from Amazon WorkMail use.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the member was enabled for Amazon WorkMail use.
      Id:
        $ref: '#/definitions/String'
        description: The identifier of the member.
      Name:
        $ref: '#/definitions/String'
        description: The name of the member.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the member, which can be ENABLED, DISABLED, or DELETED.'
      Type:
        $ref: '#/definitions/MemberType'
        description: A member can be a user or group.
    type: object
  MemberType:
    enum:
      - GROUP
      - USER
    type: string
  Members:
    items:
      $ref: '#/definitions/Member'
    type: array
  NameAvailabilityException:
    description: 'The entity (user, group, or user) name isn''t unique in Amazon WorkMail.'
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  NextToken:
    maxLength: 1024
    minLength: 1
    type: string
  OrganizationId:
    pattern: '^m-[0-9a-f]{32}$'
    type: string
  OrganizationName:
    maxLength: 62
    minLength: 1
    pattern: '^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*'
    type: string
  OrganizationNotFoundException:
    description: An operation received a valid organization identifier that either doesn't belong or exist in the system.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  OrganizationStateException:
    description: The organization must have a valid state (Active or Synchronizing) to perform certain operations on the organization or its entities.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  OrganizationSummaries:
    items:
      $ref: '#/definitions/OrganizationSummary'
    type: array
  OrganizationSummary:
    description: The brief overview associated with an organization.
    properties:
      Alias:
        $ref: '#/definitions/OrganizationName'
        description: The alias associated with the organization.
      ErrorMessage:
        $ref: '#/definitions/String'
        description: The error message associated with the organization. It is only present if unexpected behavior has occurred with regards to the organization. It provides insight or solutions regarding unexpected behavior.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization.
      State:
        $ref: '#/definitions/String'
        description: The state associated with the organization.
    type: object
  Password:
    format: password
    maxLength: 256
    pattern: '[\u0020-\u00FF]+'
    type: string
  RegisterToWorkMailRequest:
    properties:
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email for the entity to be updated.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier for the entity to be updated.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier for the organization under which the Amazon WorkMail entity exists.
    required:
      - OrganizationId
      - EntityId
      - Email
    type: object
  RegisterToWorkMailResponse:
    properties: {}
    type: object
  ReservedNameException:
    description: This entity name is not allowed in Amazon WorkMail.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  ResetPasswordRequest:
    properties:
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier of the organization that contains the user for which the password is reset.
      Password:
        $ref: '#/definitions/Password'
        description: The new password for the user.
      UserId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the user for whom the password is reset.
    required:
      - OrganizationId
      - UserId
      - Password
    type: object
  ResetPasswordResponse:
    properties: {}
    type: object
  Resource:
    description: The overview for a resource containing relevant data regarding it.
    properties:
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the resource was disabled from Amazon WorkMail use.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the resource.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the resource was enabled for Amazon WorkMail use.
      Id:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the resource.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the resource.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the resource, which can be ENABLED, DISABLED, or DELETED.'
      Type:
        $ref: '#/definitions/ResourceType'
        description: 'The type of the resource: equipment or room.'
    type: object
  ResourceDelegates:
    items:
      $ref: '#/definitions/Delegate'
    type: array
  ResourceId:
    pattern: '^r-[0-9a-f]{32}$'
    type: string
  ResourceName:
    maxLength: 20
    minLength: 1
    pattern: '[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9]{2,})?'
    type: string
  ResourceType:
    enum:
      - ROOM
      - EQUIPMENT
    type: string
  Resources:
    items:
      $ref: '#/definitions/Resource'
    type: array
  String:
    maxLength: 256
    type: string
  Timestamp:
    format: date-time
    type: string
  UnsupportedOperationException:
    description: You can't perform a write operation against a read-only directory.
    properties:
      Message:
        $ref: '#/definitions/String'
    type: object
  UpdatePrimaryEmailAddressRequest:
    properties:
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The value of the email to be updated as primary.
      EntityId:
        $ref: '#/definitions/WorkMailIdentifier'
        description: 'The entity to update (user, group, or resource).'
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The organization that contains the entity to update.
    required:
      - OrganizationId
      - EntityId
      - Email
    type: object
  UpdatePrimaryEmailAddressResponse:
    properties: {}
    type: object
  UpdateResourceRequest:
    properties:
      BookingOptions:
        $ref: '#/definitions/BookingOptions'
        description: The resource's booking options to be updated.
      Name:
        $ref: '#/definitions/ResourceName'
        description: The name of the resource to be updated.
      OrganizationId:
        $ref: '#/definitions/OrganizationId'
        description: The identifier associated with the organization for which the resource is updated.
      ResourceId:
        $ref: '#/definitions/ResourceId'
        description: The identifier of the resource to be updated.
    required:
      - OrganizationId
      - ResourceId
    type: object
  UpdateResourceResponse:
    properties: {}
    type: object
  User:
    description: The representation of an Amazon WorkMail user.
    properties:
      DisabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the user was disabled from Amazon WorkMail use.
      DisplayName:
        $ref: '#/definitions/String'
        description: The display name of the user.
      Email:
        $ref: '#/definitions/EmailAddress'
        description: The email of the user.
      EnabledDate:
        $ref: '#/definitions/Timestamp'
        description: The date indicating when the user was enabled for Amazon WorkMail use.
      Id:
        $ref: '#/definitions/WorkMailIdentifier'
        description: The identifier of the user.
      Name:
        $ref: '#/definitions/UserName'
        description: The name of the user.
      State:
        $ref: '#/definitions/EntityState'
        description: 'The state of the user, which can be ENABLED, DISABLED, or DELETED.'
      UserRole:
        $ref: '#/definitions/UserRole'
        description: The role of the user.
    type: object
  UserName:
    maxLength: 64
    minLength: 1
    pattern: '[\w\-.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z0-9]{2,})?'
    type: string
  UserRole:
    enum:
      - USER
      - RESOURCE
      - SYSTEM_USER
    type: string
  Users:
    items:
      $ref: '#/definitions/User'
    type: array
  WorkMailIdentifier:
    maxLength: 256
    minLength: 12
    type: string
